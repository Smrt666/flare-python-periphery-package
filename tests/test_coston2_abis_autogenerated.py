import unittest
import src.flare_python_periphery_package as fpp


class TestCoston2Abis(unittest.TestCase):
    def test_abis_exist_for_all_contracts(self):
        self.assertIsInstance(fpp.coston2.abis.IWNat, list)
        self.assertIsInstance(fpp.coston2.abis.IDelegationAccount, list)
        self.assertIsInstance(fpp.coston2.abis.ICChainStake, list)
        self.assertIsInstance(fpp.coston2.abis.IPriceSubmitter, list)
        self.assertIsInstance(fpp.coston2.abis.IFastUpdateIncentiveManager, list)
        self.assertIsInstance(fpp.coston2.abis.IFtsoFeedIdConverter, list)
        self.assertIsInstance(fpp.coston2.abis.ICChainVotePower, list)
        self.assertIsInstance(fpp.coston2.abis.IPChainStakeMirror, list)
        self.assertIsInstance(fpp.coston2.abis.IRNatAccount, list)
        self.assertIsInstance(fpp.coston2.abis.IFlareContractRegistry, list)
        self.assertIsInstance(fpp.coston2.abis.IGovernanceSettings, list)
        self.assertIsInstance(fpp.coston2.abis.IRandomProvider, list)
        self.assertIsInstance(fpp.coston2.abis.IValidatorRewardOffersManager, list)
        self.assertIsInstance(fpp.coston2.abis.IVPToken, list)
        self.assertIsInstance(fpp.coston2.abis.IFtsoInflationConfigurations, list)
        self.assertIsInstance(fpp.coston2.abis.IGovernanceVotePower, list)
        self.assertIsInstance(fpp.coston2.abis.ISubmission, list)
        self.assertIsInstance(fpp.coston2.abis.IFtsoManager, list)
        self.assertIsInstance(fpp.coston2.abis.IEntityManager, list)
        self.assertIsInstance(fpp.coston2.abis.IPollingFtso, list)
        self.assertIsInstance(fpp.coston2.abis.IFlareSystemsCalculator, list)
        self.assertIsInstance(fpp.coston2.abis.IFtsoFeedDecimals, list)
        self.assertIsInstance(fpp.coston2.abis.FlareContractsRegistryLibrary, list)
        self.assertIsInstance(fpp.coston2.abis.IIncreaseManager, list)
        self.assertIsInstance(fpp.coston2.abis.IPChainStakeMirrorVerifier, list)
        self.assertIsInstance(fpp.coston2.abis.IPChainVotePower, list)
        self.assertIsInstance(fpp.coston2.abis.IFtsoRewardOffersManager, list)
        self.assertIsInstance(fpp.coston2.abis.IClaimSetupManager, list)
        self.assertIsInstance(fpp.coston2.abis.IDistributionToDelegators, list)
        self.assertIsInstance(fpp.coston2.abis.IFastUpdatesConfiguration, list)
        self.assertIsInstance(fpp.coston2.abis.IGenericRewardManager, list)
        self.assertIsInstance(fpp.coston2.abis.IFlareSystemsManager, list)
        self.assertIsInstance(fpp.coston2.abis.IFlareAssetRegistry, list)
        self.assertIsInstance(fpp.coston2.abis.IGovernor, list)
        self.assertIsInstance(fpp.coston2.abis.IFtsoRewardManager, list)
        self.assertIsInstance(fpp.coston2.abis.IVoterRegistry, list)
        self.assertIsInstance(fpp.coston2.abis.IWNatDelegationFee, list)
        self.assertIsInstance(fpp.coston2.abis.IVoterWhitelister, list)
        self.assertIsInstance(fpp.coston2.abis.IFtsoFeedPublisher, list)
        self.assertIsInstance(fpp.coston2.abis.IRelay, list)
        self.assertIsInstance(fpp.coston2.abis.IRewardManager, list)
        self.assertIsInstance(fpp.coston2.abis.IAddressBinder, list)
        self.assertIsInstance(fpp.coston2.abis.IFastUpdater, list)
        self.assertIsInstance(fpp.coston2.abis.IPChainStakeMirrorMultiSigVoting, list)
        self.assertIsInstance(fpp.coston2.abis.IRNat, list)
        self.assertIsInstance(fpp.coston2.abis.IVPContractEvents, list)
        self.assertIsInstance(fpp.coston2.abis.IFtso, list)
        self.assertIsInstance(fpp.coston2.abis.IValidatorRegistry, list)
        self.assertIsInstance(fpp.coston2.abis.IFtsoRegistry, list)
        self.assertIsInstance(fpp.coston2.abis.IFtsoGenesis, list)
        self.assertIsInstance(fpp.coston2.abis.IFlareDaemonize, list)
        self.assertIsInstance(fpp.coston2.abis.IFtsoRegistryGenesis, list)
        self.assertIsInstance(fpp.coston2.abis.IFtsoManagerGenesis, list)
        self.assertIsInstance(fpp.coston2.abis.IIEntityManager, list)
        self.assertIsInstance(fpp.coston2.abis.IICleanupBlockNumberManager, list)
        self.assertIsInstance(fpp.coston2.abis.IIRewardManager, list)
        self.assertIsInstance(fpp.coston2.abis.IIVoterRegistry, list)
        self.assertIsInstance(fpp.coston2.abis.IIPublicKeyVerifier, list)
        self.assertIsInstance(fpp.coston2.abis.IISubmission, list)
        self.assertIsInstance(fpp.coston2.abis.IIVoterRegistrationTrigger, list)
        self.assertIsInstance(fpp.coston2.abis.IIClaimSetupManager, list)
        self.assertIsInstance(fpp.coston2.abis.IIRelay, list)
        self.assertIsInstance(fpp.coston2.abis.IIRewardEpochSwitchoverTrigger, list)
        self.assertIsInstance(fpp.coston2.abis.IIFlareSystemsCalculator, list)
        self.assertIsInstance(fpp.coston2.abis.IINodePossessionVerifier, list)
        self.assertIsInstance(fpp.coston2.abis.IIFlareSystemsManager, list)
        self.assertIsInstance(fpp.coston2.abis.IICleanable, list)
        self.assertIsInstance(fpp.coston2.abis.IIVPToken, list)
        self.assertIsInstance(fpp.coston2.abis.IIVPContract, list)
        self.assertIsInstance(fpp.coston2.abis.IIGovernanceVotePower, list)
        self.assertIsInstance(fpp.coston2.abis.IIRNatAccount, list)
        self.assertIsInstance(fpp.coston2.abis.IIRNat, list)
        self.assertIsInstance(fpp.coston2.abis.IIFtsoFeedPublisher, list)
        self.assertIsInstance(fpp.coston2.abis.IIFtso, list)
        self.assertIsInstance(fpp.coston2.abis.IIPollingFoundation, list)
        self.assertIsInstance(fpp.coston2.abis.IIGovernorProposer, list)
        self.assertIsInstance(fpp.coston2.abis.Bn256, list)
        self.assertIsInstance(fpp.coston2.abis.IIFastUpdater, list)
        self.assertIsInstance(fpp.coston2.abis.IIFastUpdateIncentiveManager, list)

    def test_name_to_abi(self):
        self.assertIsInstance(fpp.coston2.name_to_abi("IWNat"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IDelegationAccount"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("ICChainStake"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IPriceSubmitter"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IFastUpdateIncentiveManager"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IFtsoFeedIdConverter"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("ICChainVotePower"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IPChainStakeMirror"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IRNatAccount"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IFlareContractRegistry"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IGovernanceSettings"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IRandomProvider"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IValidatorRewardOffersManager"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IVPToken"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IFtsoInflationConfigurations"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IGovernanceVotePower"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("ISubmission"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IFtsoManager"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IEntityManager"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IPollingFtso"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IFlareSystemsCalculator"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IFtsoFeedDecimals"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("FlareContractsRegistryLibrary"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IIncreaseManager"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IPChainStakeMirrorVerifier"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IPChainVotePower"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IFtsoRewardOffersManager"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IClaimSetupManager"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IDistributionToDelegators"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IFastUpdatesConfiguration"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IGenericRewardManager"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IFlareSystemsManager"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IFlareAssetRegistry"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IGovernor"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IFtsoRewardManager"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IVoterRegistry"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IWNatDelegationFee"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IVoterWhitelister"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IFtsoFeedPublisher"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IRelay"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IRewardManager"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IAddressBinder"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IFastUpdater"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IPChainStakeMirrorMultiSigVoting"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IRNat"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IVPContractEvents"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IFtso"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IValidatorRegistry"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IFtsoRegistry"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IFtsoGenesis"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IFlareDaemonize"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IFtsoRegistryGenesis"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IFtsoManagerGenesis"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IIEntityManager"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IICleanupBlockNumberManager"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IIRewardManager"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IIVoterRegistry"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IIPublicKeyVerifier"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IISubmission"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IIVoterRegistrationTrigger"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IIClaimSetupManager"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IIRelay"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IIRewardEpochSwitchoverTrigger"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IIFlareSystemsCalculator"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IINodePossessionVerifier"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IIFlareSystemsManager"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IICleanable"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IIVPToken"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IIVPContract"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IIGovernanceVotePower"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IIRNatAccount"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IIRNat"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IIFtsoFeedPublisher"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IIFtso"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IIPollingFoundation"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IIGovernorProposer"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("Bn256"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IIFastUpdater"), list)
        self.assertIsInstance(fpp.coston2.name_to_abi("IIFastUpdateIncentiveManager"), list)

    def test_abis_are_copied(self):
        self.assertEqual(fpp.coston2.abis.IWNat, fpp.coston2.name_to_abi("IWNat"))
        self.assertIsNot(fpp.coston2.abis.IWNat, fpp.coston2.name_to_abi("IWNat"))
        for el1, el2 in zip(fpp.coston2.abis.IWNat, fpp.coston2.name_to_abi("IWNat")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IDelegationAccount, fpp.coston2.name_to_abi("IDelegationAccount"))
        self.assertIsNot(fpp.coston2.abis.IDelegationAccount, fpp.coston2.name_to_abi("IDelegationAccount"))
        for el1, el2 in zip(fpp.coston2.abis.IDelegationAccount, fpp.coston2.name_to_abi("IDelegationAccount")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.ICChainStake, fpp.coston2.name_to_abi("ICChainStake"))
        self.assertIsNot(fpp.coston2.abis.ICChainStake, fpp.coston2.name_to_abi("ICChainStake"))
        for el1, el2 in zip(fpp.coston2.abis.ICChainStake, fpp.coston2.name_to_abi("ICChainStake")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IPriceSubmitter, fpp.coston2.name_to_abi("IPriceSubmitter"))
        self.assertIsNot(fpp.coston2.abis.IPriceSubmitter, fpp.coston2.name_to_abi("IPriceSubmitter"))
        for el1, el2 in zip(fpp.coston2.abis.IPriceSubmitter, fpp.coston2.name_to_abi("IPriceSubmitter")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IFastUpdateIncentiveManager, fpp.coston2.name_to_abi("IFastUpdateIncentiveManager"))
        self.assertIsNot(fpp.coston2.abis.IFastUpdateIncentiveManager, fpp.coston2.name_to_abi("IFastUpdateIncentiveManager"))
        for el1, el2 in zip(fpp.coston2.abis.IFastUpdateIncentiveManager, fpp.coston2.name_to_abi("IFastUpdateIncentiveManager")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IFtsoFeedIdConverter, fpp.coston2.name_to_abi("IFtsoFeedIdConverter"))
        self.assertIsNot(fpp.coston2.abis.IFtsoFeedIdConverter, fpp.coston2.name_to_abi("IFtsoFeedIdConverter"))
        for el1, el2 in zip(fpp.coston2.abis.IFtsoFeedIdConverter, fpp.coston2.name_to_abi("IFtsoFeedIdConverter")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.ICChainVotePower, fpp.coston2.name_to_abi("ICChainVotePower"))
        self.assertIsNot(fpp.coston2.abis.ICChainVotePower, fpp.coston2.name_to_abi("ICChainVotePower"))
        for el1, el2 in zip(fpp.coston2.abis.ICChainVotePower, fpp.coston2.name_to_abi("ICChainVotePower")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IPChainStakeMirror, fpp.coston2.name_to_abi("IPChainStakeMirror"))
        self.assertIsNot(fpp.coston2.abis.IPChainStakeMirror, fpp.coston2.name_to_abi("IPChainStakeMirror"))
        for el1, el2 in zip(fpp.coston2.abis.IPChainStakeMirror, fpp.coston2.name_to_abi("IPChainStakeMirror")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IRNatAccount, fpp.coston2.name_to_abi("IRNatAccount"))
        self.assertIsNot(fpp.coston2.abis.IRNatAccount, fpp.coston2.name_to_abi("IRNatAccount"))
        for el1, el2 in zip(fpp.coston2.abis.IRNatAccount, fpp.coston2.name_to_abi("IRNatAccount")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IFlareContractRegistry, fpp.coston2.name_to_abi("IFlareContractRegistry"))
        self.assertIsNot(fpp.coston2.abis.IFlareContractRegistry, fpp.coston2.name_to_abi("IFlareContractRegistry"))
        for el1, el2 in zip(fpp.coston2.abis.IFlareContractRegistry, fpp.coston2.name_to_abi("IFlareContractRegistry")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IGovernanceSettings, fpp.coston2.name_to_abi("IGovernanceSettings"))
        self.assertIsNot(fpp.coston2.abis.IGovernanceSettings, fpp.coston2.name_to_abi("IGovernanceSettings"))
        for el1, el2 in zip(fpp.coston2.abis.IGovernanceSettings, fpp.coston2.name_to_abi("IGovernanceSettings")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IRandomProvider, fpp.coston2.name_to_abi("IRandomProvider"))
        self.assertIsNot(fpp.coston2.abis.IRandomProvider, fpp.coston2.name_to_abi("IRandomProvider"))
        for el1, el2 in zip(fpp.coston2.abis.IRandomProvider, fpp.coston2.name_to_abi("IRandomProvider")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IValidatorRewardOffersManager, fpp.coston2.name_to_abi("IValidatorRewardOffersManager"))
        self.assertIsNot(fpp.coston2.abis.IValidatorRewardOffersManager, fpp.coston2.name_to_abi("IValidatorRewardOffersManager"))
        for el1, el2 in zip(fpp.coston2.abis.IValidatorRewardOffersManager, fpp.coston2.name_to_abi("IValidatorRewardOffersManager")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IVPToken, fpp.coston2.name_to_abi("IVPToken"))
        self.assertIsNot(fpp.coston2.abis.IVPToken, fpp.coston2.name_to_abi("IVPToken"))
        for el1, el2 in zip(fpp.coston2.abis.IVPToken, fpp.coston2.name_to_abi("IVPToken")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IFtsoInflationConfigurations, fpp.coston2.name_to_abi("IFtsoInflationConfigurations"))
        self.assertIsNot(fpp.coston2.abis.IFtsoInflationConfigurations, fpp.coston2.name_to_abi("IFtsoInflationConfigurations"))
        for el1, el2 in zip(fpp.coston2.abis.IFtsoInflationConfigurations, fpp.coston2.name_to_abi("IFtsoInflationConfigurations")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IGovernanceVotePower, fpp.coston2.name_to_abi("IGovernanceVotePower"))
        self.assertIsNot(fpp.coston2.abis.IGovernanceVotePower, fpp.coston2.name_to_abi("IGovernanceVotePower"))
        for el1, el2 in zip(fpp.coston2.abis.IGovernanceVotePower, fpp.coston2.name_to_abi("IGovernanceVotePower")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.ISubmission, fpp.coston2.name_to_abi("ISubmission"))
        self.assertIsNot(fpp.coston2.abis.ISubmission, fpp.coston2.name_to_abi("ISubmission"))
        for el1, el2 in zip(fpp.coston2.abis.ISubmission, fpp.coston2.name_to_abi("ISubmission")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IFtsoManager, fpp.coston2.name_to_abi("IFtsoManager"))
        self.assertIsNot(fpp.coston2.abis.IFtsoManager, fpp.coston2.name_to_abi("IFtsoManager"))
        for el1, el2 in zip(fpp.coston2.abis.IFtsoManager, fpp.coston2.name_to_abi("IFtsoManager")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IEntityManager, fpp.coston2.name_to_abi("IEntityManager"))
        self.assertIsNot(fpp.coston2.abis.IEntityManager, fpp.coston2.name_to_abi("IEntityManager"))
        for el1, el2 in zip(fpp.coston2.abis.IEntityManager, fpp.coston2.name_to_abi("IEntityManager")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IPollingFtso, fpp.coston2.name_to_abi("IPollingFtso"))
        self.assertIsNot(fpp.coston2.abis.IPollingFtso, fpp.coston2.name_to_abi("IPollingFtso"))
        for el1, el2 in zip(fpp.coston2.abis.IPollingFtso, fpp.coston2.name_to_abi("IPollingFtso")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IFlareSystemsCalculator, fpp.coston2.name_to_abi("IFlareSystemsCalculator"))
        self.assertIsNot(fpp.coston2.abis.IFlareSystemsCalculator, fpp.coston2.name_to_abi("IFlareSystemsCalculator"))
        for el1, el2 in zip(fpp.coston2.abis.IFlareSystemsCalculator, fpp.coston2.name_to_abi("IFlareSystemsCalculator")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IFtsoFeedDecimals, fpp.coston2.name_to_abi("IFtsoFeedDecimals"))
        self.assertIsNot(fpp.coston2.abis.IFtsoFeedDecimals, fpp.coston2.name_to_abi("IFtsoFeedDecimals"))
        for el1, el2 in zip(fpp.coston2.abis.IFtsoFeedDecimals, fpp.coston2.name_to_abi("IFtsoFeedDecimals")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.FlareContractsRegistryLibrary, fpp.coston2.name_to_abi("FlareContractsRegistryLibrary"))
        self.assertIsNot(fpp.coston2.abis.FlareContractsRegistryLibrary, fpp.coston2.name_to_abi("FlareContractsRegistryLibrary"))
        for el1, el2 in zip(fpp.coston2.abis.FlareContractsRegistryLibrary, fpp.coston2.name_to_abi("FlareContractsRegistryLibrary")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IIncreaseManager, fpp.coston2.name_to_abi("IIncreaseManager"))
        self.assertIsNot(fpp.coston2.abis.IIncreaseManager, fpp.coston2.name_to_abi("IIncreaseManager"))
        for el1, el2 in zip(fpp.coston2.abis.IIncreaseManager, fpp.coston2.name_to_abi("IIncreaseManager")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IPChainStakeMirrorVerifier, fpp.coston2.name_to_abi("IPChainStakeMirrorVerifier"))
        self.assertIsNot(fpp.coston2.abis.IPChainStakeMirrorVerifier, fpp.coston2.name_to_abi("IPChainStakeMirrorVerifier"))
        for el1, el2 in zip(fpp.coston2.abis.IPChainStakeMirrorVerifier, fpp.coston2.name_to_abi("IPChainStakeMirrorVerifier")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IPChainVotePower, fpp.coston2.name_to_abi("IPChainVotePower"))
        self.assertIsNot(fpp.coston2.abis.IPChainVotePower, fpp.coston2.name_to_abi("IPChainVotePower"))
        for el1, el2 in zip(fpp.coston2.abis.IPChainVotePower, fpp.coston2.name_to_abi("IPChainVotePower")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IFtsoRewardOffersManager, fpp.coston2.name_to_abi("IFtsoRewardOffersManager"))
        self.assertIsNot(fpp.coston2.abis.IFtsoRewardOffersManager, fpp.coston2.name_to_abi("IFtsoRewardOffersManager"))
        for el1, el2 in zip(fpp.coston2.abis.IFtsoRewardOffersManager, fpp.coston2.name_to_abi("IFtsoRewardOffersManager")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IClaimSetupManager, fpp.coston2.name_to_abi("IClaimSetupManager"))
        self.assertIsNot(fpp.coston2.abis.IClaimSetupManager, fpp.coston2.name_to_abi("IClaimSetupManager"))
        for el1, el2 in zip(fpp.coston2.abis.IClaimSetupManager, fpp.coston2.name_to_abi("IClaimSetupManager")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IDistributionToDelegators, fpp.coston2.name_to_abi("IDistributionToDelegators"))
        self.assertIsNot(fpp.coston2.abis.IDistributionToDelegators, fpp.coston2.name_to_abi("IDistributionToDelegators"))
        for el1, el2 in zip(fpp.coston2.abis.IDistributionToDelegators, fpp.coston2.name_to_abi("IDistributionToDelegators")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IFastUpdatesConfiguration, fpp.coston2.name_to_abi("IFastUpdatesConfiguration"))
        self.assertIsNot(fpp.coston2.abis.IFastUpdatesConfiguration, fpp.coston2.name_to_abi("IFastUpdatesConfiguration"))
        for el1, el2 in zip(fpp.coston2.abis.IFastUpdatesConfiguration, fpp.coston2.name_to_abi("IFastUpdatesConfiguration")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IGenericRewardManager, fpp.coston2.name_to_abi("IGenericRewardManager"))
        self.assertIsNot(fpp.coston2.abis.IGenericRewardManager, fpp.coston2.name_to_abi("IGenericRewardManager"))
        for el1, el2 in zip(fpp.coston2.abis.IGenericRewardManager, fpp.coston2.name_to_abi("IGenericRewardManager")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IFlareSystemsManager, fpp.coston2.name_to_abi("IFlareSystemsManager"))
        self.assertIsNot(fpp.coston2.abis.IFlareSystemsManager, fpp.coston2.name_to_abi("IFlareSystemsManager"))
        for el1, el2 in zip(fpp.coston2.abis.IFlareSystemsManager, fpp.coston2.name_to_abi("IFlareSystemsManager")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IFlareAssetRegistry, fpp.coston2.name_to_abi("IFlareAssetRegistry"))
        self.assertIsNot(fpp.coston2.abis.IFlareAssetRegistry, fpp.coston2.name_to_abi("IFlareAssetRegistry"))
        for el1, el2 in zip(fpp.coston2.abis.IFlareAssetRegistry, fpp.coston2.name_to_abi("IFlareAssetRegistry")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IGovernor, fpp.coston2.name_to_abi("IGovernor"))
        self.assertIsNot(fpp.coston2.abis.IGovernor, fpp.coston2.name_to_abi("IGovernor"))
        for el1, el2 in zip(fpp.coston2.abis.IGovernor, fpp.coston2.name_to_abi("IGovernor")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IFtsoRewardManager, fpp.coston2.name_to_abi("IFtsoRewardManager"))
        self.assertIsNot(fpp.coston2.abis.IFtsoRewardManager, fpp.coston2.name_to_abi("IFtsoRewardManager"))
        for el1, el2 in zip(fpp.coston2.abis.IFtsoRewardManager, fpp.coston2.name_to_abi("IFtsoRewardManager")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IVoterRegistry, fpp.coston2.name_to_abi("IVoterRegistry"))
        self.assertIsNot(fpp.coston2.abis.IVoterRegistry, fpp.coston2.name_to_abi("IVoterRegistry"))
        for el1, el2 in zip(fpp.coston2.abis.IVoterRegistry, fpp.coston2.name_to_abi("IVoterRegistry")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IWNatDelegationFee, fpp.coston2.name_to_abi("IWNatDelegationFee"))
        self.assertIsNot(fpp.coston2.abis.IWNatDelegationFee, fpp.coston2.name_to_abi("IWNatDelegationFee"))
        for el1, el2 in zip(fpp.coston2.abis.IWNatDelegationFee, fpp.coston2.name_to_abi("IWNatDelegationFee")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IVoterWhitelister, fpp.coston2.name_to_abi("IVoterWhitelister"))
        self.assertIsNot(fpp.coston2.abis.IVoterWhitelister, fpp.coston2.name_to_abi("IVoterWhitelister"))
        for el1, el2 in zip(fpp.coston2.abis.IVoterWhitelister, fpp.coston2.name_to_abi("IVoterWhitelister")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IFtsoFeedPublisher, fpp.coston2.name_to_abi("IFtsoFeedPublisher"))
        self.assertIsNot(fpp.coston2.abis.IFtsoFeedPublisher, fpp.coston2.name_to_abi("IFtsoFeedPublisher"))
        for el1, el2 in zip(fpp.coston2.abis.IFtsoFeedPublisher, fpp.coston2.name_to_abi("IFtsoFeedPublisher")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IRelay, fpp.coston2.name_to_abi("IRelay"))
        self.assertIsNot(fpp.coston2.abis.IRelay, fpp.coston2.name_to_abi("IRelay"))
        for el1, el2 in zip(fpp.coston2.abis.IRelay, fpp.coston2.name_to_abi("IRelay")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IRewardManager, fpp.coston2.name_to_abi("IRewardManager"))
        self.assertIsNot(fpp.coston2.abis.IRewardManager, fpp.coston2.name_to_abi("IRewardManager"))
        for el1, el2 in zip(fpp.coston2.abis.IRewardManager, fpp.coston2.name_to_abi("IRewardManager")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IAddressBinder, fpp.coston2.name_to_abi("IAddressBinder"))
        self.assertIsNot(fpp.coston2.abis.IAddressBinder, fpp.coston2.name_to_abi("IAddressBinder"))
        for el1, el2 in zip(fpp.coston2.abis.IAddressBinder, fpp.coston2.name_to_abi("IAddressBinder")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IFastUpdater, fpp.coston2.name_to_abi("IFastUpdater"))
        self.assertIsNot(fpp.coston2.abis.IFastUpdater, fpp.coston2.name_to_abi("IFastUpdater"))
        for el1, el2 in zip(fpp.coston2.abis.IFastUpdater, fpp.coston2.name_to_abi("IFastUpdater")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IPChainStakeMirrorMultiSigVoting, fpp.coston2.name_to_abi("IPChainStakeMirrorMultiSigVoting"))
        self.assertIsNot(fpp.coston2.abis.IPChainStakeMirrorMultiSigVoting, fpp.coston2.name_to_abi("IPChainStakeMirrorMultiSigVoting"))
        for el1, el2 in zip(fpp.coston2.abis.IPChainStakeMirrorMultiSigVoting, fpp.coston2.name_to_abi("IPChainStakeMirrorMultiSigVoting")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IRNat, fpp.coston2.name_to_abi("IRNat"))
        self.assertIsNot(fpp.coston2.abis.IRNat, fpp.coston2.name_to_abi("IRNat"))
        for el1, el2 in zip(fpp.coston2.abis.IRNat, fpp.coston2.name_to_abi("IRNat")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IVPContractEvents, fpp.coston2.name_to_abi("IVPContractEvents"))
        self.assertIsNot(fpp.coston2.abis.IVPContractEvents, fpp.coston2.name_to_abi("IVPContractEvents"))
        for el1, el2 in zip(fpp.coston2.abis.IVPContractEvents, fpp.coston2.name_to_abi("IVPContractEvents")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IFtso, fpp.coston2.name_to_abi("IFtso"))
        self.assertIsNot(fpp.coston2.abis.IFtso, fpp.coston2.name_to_abi("IFtso"))
        for el1, el2 in zip(fpp.coston2.abis.IFtso, fpp.coston2.name_to_abi("IFtso")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IValidatorRegistry, fpp.coston2.name_to_abi("IValidatorRegistry"))
        self.assertIsNot(fpp.coston2.abis.IValidatorRegistry, fpp.coston2.name_to_abi("IValidatorRegistry"))
        for el1, el2 in zip(fpp.coston2.abis.IValidatorRegistry, fpp.coston2.name_to_abi("IValidatorRegistry")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IFtsoRegistry, fpp.coston2.name_to_abi("IFtsoRegistry"))
        self.assertIsNot(fpp.coston2.abis.IFtsoRegistry, fpp.coston2.name_to_abi("IFtsoRegistry"))
        for el1, el2 in zip(fpp.coston2.abis.IFtsoRegistry, fpp.coston2.name_to_abi("IFtsoRegistry")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IFtsoGenesis, fpp.coston2.name_to_abi("IFtsoGenesis"))
        self.assertIsNot(fpp.coston2.abis.IFtsoGenesis, fpp.coston2.name_to_abi("IFtsoGenesis"))
        for el1, el2 in zip(fpp.coston2.abis.IFtsoGenesis, fpp.coston2.name_to_abi("IFtsoGenesis")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IFlareDaemonize, fpp.coston2.name_to_abi("IFlareDaemonize"))
        self.assertIsNot(fpp.coston2.abis.IFlareDaemonize, fpp.coston2.name_to_abi("IFlareDaemonize"))
        for el1, el2 in zip(fpp.coston2.abis.IFlareDaemonize, fpp.coston2.name_to_abi("IFlareDaemonize")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IFtsoRegistryGenesis, fpp.coston2.name_to_abi("IFtsoRegistryGenesis"))
        self.assertIsNot(fpp.coston2.abis.IFtsoRegistryGenesis, fpp.coston2.name_to_abi("IFtsoRegistryGenesis"))
        for el1, el2 in zip(fpp.coston2.abis.IFtsoRegistryGenesis, fpp.coston2.name_to_abi("IFtsoRegistryGenesis")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IFtsoManagerGenesis, fpp.coston2.name_to_abi("IFtsoManagerGenesis"))
        self.assertIsNot(fpp.coston2.abis.IFtsoManagerGenesis, fpp.coston2.name_to_abi("IFtsoManagerGenesis"))
        for el1, el2 in zip(fpp.coston2.abis.IFtsoManagerGenesis, fpp.coston2.name_to_abi("IFtsoManagerGenesis")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IIEntityManager, fpp.coston2.name_to_abi("IIEntityManager"))
        self.assertIsNot(fpp.coston2.abis.IIEntityManager, fpp.coston2.name_to_abi("IIEntityManager"))
        for el1, el2 in zip(fpp.coston2.abis.IIEntityManager, fpp.coston2.name_to_abi("IIEntityManager")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IICleanupBlockNumberManager, fpp.coston2.name_to_abi("IICleanupBlockNumberManager"))
        self.assertIsNot(fpp.coston2.abis.IICleanupBlockNumberManager, fpp.coston2.name_to_abi("IICleanupBlockNumberManager"))
        for el1, el2 in zip(fpp.coston2.abis.IICleanupBlockNumberManager, fpp.coston2.name_to_abi("IICleanupBlockNumberManager")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IIRewardManager, fpp.coston2.name_to_abi("IIRewardManager"))
        self.assertIsNot(fpp.coston2.abis.IIRewardManager, fpp.coston2.name_to_abi("IIRewardManager"))
        for el1, el2 in zip(fpp.coston2.abis.IIRewardManager, fpp.coston2.name_to_abi("IIRewardManager")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IIVoterRegistry, fpp.coston2.name_to_abi("IIVoterRegistry"))
        self.assertIsNot(fpp.coston2.abis.IIVoterRegistry, fpp.coston2.name_to_abi("IIVoterRegistry"))
        for el1, el2 in zip(fpp.coston2.abis.IIVoterRegistry, fpp.coston2.name_to_abi("IIVoterRegistry")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IIPublicKeyVerifier, fpp.coston2.name_to_abi("IIPublicKeyVerifier"))
        self.assertIsNot(fpp.coston2.abis.IIPublicKeyVerifier, fpp.coston2.name_to_abi("IIPublicKeyVerifier"))
        for el1, el2 in zip(fpp.coston2.abis.IIPublicKeyVerifier, fpp.coston2.name_to_abi("IIPublicKeyVerifier")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IISubmission, fpp.coston2.name_to_abi("IISubmission"))
        self.assertIsNot(fpp.coston2.abis.IISubmission, fpp.coston2.name_to_abi("IISubmission"))
        for el1, el2 in zip(fpp.coston2.abis.IISubmission, fpp.coston2.name_to_abi("IISubmission")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IIVoterRegistrationTrigger, fpp.coston2.name_to_abi("IIVoterRegistrationTrigger"))
        self.assertIsNot(fpp.coston2.abis.IIVoterRegistrationTrigger, fpp.coston2.name_to_abi("IIVoterRegistrationTrigger"))
        for el1, el2 in zip(fpp.coston2.abis.IIVoterRegistrationTrigger, fpp.coston2.name_to_abi("IIVoterRegistrationTrigger")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IIClaimSetupManager, fpp.coston2.name_to_abi("IIClaimSetupManager"))
        self.assertIsNot(fpp.coston2.abis.IIClaimSetupManager, fpp.coston2.name_to_abi("IIClaimSetupManager"))
        for el1, el2 in zip(fpp.coston2.abis.IIClaimSetupManager, fpp.coston2.name_to_abi("IIClaimSetupManager")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IIRelay, fpp.coston2.name_to_abi("IIRelay"))
        self.assertIsNot(fpp.coston2.abis.IIRelay, fpp.coston2.name_to_abi("IIRelay"))
        for el1, el2 in zip(fpp.coston2.abis.IIRelay, fpp.coston2.name_to_abi("IIRelay")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IIRewardEpochSwitchoverTrigger, fpp.coston2.name_to_abi("IIRewardEpochSwitchoverTrigger"))
        self.assertIsNot(fpp.coston2.abis.IIRewardEpochSwitchoverTrigger, fpp.coston2.name_to_abi("IIRewardEpochSwitchoverTrigger"))
        for el1, el2 in zip(fpp.coston2.abis.IIRewardEpochSwitchoverTrigger, fpp.coston2.name_to_abi("IIRewardEpochSwitchoverTrigger")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IIFlareSystemsCalculator, fpp.coston2.name_to_abi("IIFlareSystemsCalculator"))
        self.assertIsNot(fpp.coston2.abis.IIFlareSystemsCalculator, fpp.coston2.name_to_abi("IIFlareSystemsCalculator"))
        for el1, el2 in zip(fpp.coston2.abis.IIFlareSystemsCalculator, fpp.coston2.name_to_abi("IIFlareSystemsCalculator")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IINodePossessionVerifier, fpp.coston2.name_to_abi("IINodePossessionVerifier"))
        self.assertIsNot(fpp.coston2.abis.IINodePossessionVerifier, fpp.coston2.name_to_abi("IINodePossessionVerifier"))
        for el1, el2 in zip(fpp.coston2.abis.IINodePossessionVerifier, fpp.coston2.name_to_abi("IINodePossessionVerifier")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IIFlareSystemsManager, fpp.coston2.name_to_abi("IIFlareSystemsManager"))
        self.assertIsNot(fpp.coston2.abis.IIFlareSystemsManager, fpp.coston2.name_to_abi("IIFlareSystemsManager"))
        for el1, el2 in zip(fpp.coston2.abis.IIFlareSystemsManager, fpp.coston2.name_to_abi("IIFlareSystemsManager")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IICleanable, fpp.coston2.name_to_abi("IICleanable"))
        self.assertIsNot(fpp.coston2.abis.IICleanable, fpp.coston2.name_to_abi("IICleanable"))
        for el1, el2 in zip(fpp.coston2.abis.IICleanable, fpp.coston2.name_to_abi("IICleanable")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IIVPToken, fpp.coston2.name_to_abi("IIVPToken"))
        self.assertIsNot(fpp.coston2.abis.IIVPToken, fpp.coston2.name_to_abi("IIVPToken"))
        for el1, el2 in zip(fpp.coston2.abis.IIVPToken, fpp.coston2.name_to_abi("IIVPToken")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IIVPContract, fpp.coston2.name_to_abi("IIVPContract"))
        self.assertIsNot(fpp.coston2.abis.IIVPContract, fpp.coston2.name_to_abi("IIVPContract"))
        for el1, el2 in zip(fpp.coston2.abis.IIVPContract, fpp.coston2.name_to_abi("IIVPContract")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IIGovernanceVotePower, fpp.coston2.name_to_abi("IIGovernanceVotePower"))
        self.assertIsNot(fpp.coston2.abis.IIGovernanceVotePower, fpp.coston2.name_to_abi("IIGovernanceVotePower"))
        for el1, el2 in zip(fpp.coston2.abis.IIGovernanceVotePower, fpp.coston2.name_to_abi("IIGovernanceVotePower")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IIRNatAccount, fpp.coston2.name_to_abi("IIRNatAccount"))
        self.assertIsNot(fpp.coston2.abis.IIRNatAccount, fpp.coston2.name_to_abi("IIRNatAccount"))
        for el1, el2 in zip(fpp.coston2.abis.IIRNatAccount, fpp.coston2.name_to_abi("IIRNatAccount")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IIRNat, fpp.coston2.name_to_abi("IIRNat"))
        self.assertIsNot(fpp.coston2.abis.IIRNat, fpp.coston2.name_to_abi("IIRNat"))
        for el1, el2 in zip(fpp.coston2.abis.IIRNat, fpp.coston2.name_to_abi("IIRNat")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IIFtsoFeedPublisher, fpp.coston2.name_to_abi("IIFtsoFeedPublisher"))
        self.assertIsNot(fpp.coston2.abis.IIFtsoFeedPublisher, fpp.coston2.name_to_abi("IIFtsoFeedPublisher"))
        for el1, el2 in zip(fpp.coston2.abis.IIFtsoFeedPublisher, fpp.coston2.name_to_abi("IIFtsoFeedPublisher")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IIFtso, fpp.coston2.name_to_abi("IIFtso"))
        self.assertIsNot(fpp.coston2.abis.IIFtso, fpp.coston2.name_to_abi("IIFtso"))
        for el1, el2 in zip(fpp.coston2.abis.IIFtso, fpp.coston2.name_to_abi("IIFtso")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IIPollingFoundation, fpp.coston2.name_to_abi("IIPollingFoundation"))
        self.assertIsNot(fpp.coston2.abis.IIPollingFoundation, fpp.coston2.name_to_abi("IIPollingFoundation"))
        for el1, el2 in zip(fpp.coston2.abis.IIPollingFoundation, fpp.coston2.name_to_abi("IIPollingFoundation")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IIGovernorProposer, fpp.coston2.name_to_abi("IIGovernorProposer"))
        self.assertIsNot(fpp.coston2.abis.IIGovernorProposer, fpp.coston2.name_to_abi("IIGovernorProposer"))
        for el1, el2 in zip(fpp.coston2.abis.IIGovernorProposer, fpp.coston2.name_to_abi("IIGovernorProposer")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.Bn256, fpp.coston2.name_to_abi("Bn256"))
        self.assertIsNot(fpp.coston2.abis.Bn256, fpp.coston2.name_to_abi("Bn256"))
        for el1, el2 in zip(fpp.coston2.abis.Bn256, fpp.coston2.name_to_abi("Bn256")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IIFastUpdater, fpp.coston2.name_to_abi("IIFastUpdater"))
        self.assertIsNot(fpp.coston2.abis.IIFastUpdater, fpp.coston2.name_to_abi("IIFastUpdater"))
        for el1, el2 in zip(fpp.coston2.abis.IIFastUpdater, fpp.coston2.name_to_abi("IIFastUpdater")):
            self.assertIsNot(el1, el2)
        self.assertEqual(fpp.coston2.abis.IIFastUpdateIncentiveManager, fpp.coston2.name_to_abi("IIFastUpdateIncentiveManager"))
        self.assertIsNot(fpp.coston2.abis.IIFastUpdateIncentiveManager, fpp.coston2.name_to_abi("IIFastUpdateIncentiveManager"))
        for el1, el2 in zip(fpp.coston2.abis.IIFastUpdateIncentiveManager, fpp.coston2.name_to_abi("IIFastUpdateIncentiveManager")):
            self.assertIsNot(el1, el2)
