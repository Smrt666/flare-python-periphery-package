import unittest
import src.flare_python_periphery_package as fpp


class TestFlareAbis(unittest.TestCase):
    def test_abis_exist_for_all_interfaces(self):
        self.assertIsInstance(fpp.flare.interface_abis.Bn256, list)
        self.assertIsInstance(fpp.flare.interface_abis.FlareContractsRegistryLibrary, list)
        self.assertIsInstance(fpp.flare.interface_abis.IAddressBinder, list)
        self.assertIsInstance(fpp.flare.interface_abis.ICChainStake, list)
        self.assertIsInstance(fpp.flare.interface_abis.ICChainVotePower, list)
        self.assertIsInstance(fpp.flare.interface_abis.IClaimSetupManager, list)
        self.assertIsInstance(fpp.flare.interface_abis.IDelegationAccount, list)
        self.assertIsInstance(fpp.flare.interface_abis.IDistributionToDelegators, list)
        self.assertIsInstance(fpp.flare.interface_abis.IEntityManager, list)
        self.assertIsInstance(fpp.flare.interface_abis.IFastUpdateIncentiveManager, list)
        self.assertIsInstance(fpp.flare.interface_abis.IFastUpdater, list)
        self.assertIsInstance(fpp.flare.interface_abis.IFastUpdatesConfiguration, list)
        self.assertIsInstance(fpp.flare.interface_abis.IFlareAssetRegistry, list)
        self.assertIsInstance(fpp.flare.interface_abis.IFlareContractRegistry, list)
        self.assertIsInstance(fpp.flare.interface_abis.IFlareDaemonize, list)
        self.assertIsInstance(fpp.flare.interface_abis.IFlareSystemsCalculator, list)
        self.assertIsInstance(fpp.flare.interface_abis.IFlareSystemsManager, list)
        self.assertIsInstance(fpp.flare.interface_abis.IFtso, list)
        self.assertIsInstance(fpp.flare.interface_abis.IFtsoFeedDecimals, list)
        self.assertIsInstance(fpp.flare.interface_abis.IFtsoFeedIdConverter, list)
        self.assertIsInstance(fpp.flare.interface_abis.IFtsoFeedPublisher, list)
        self.assertIsInstance(fpp.flare.interface_abis.IFtsoGenesis, list)
        self.assertIsInstance(fpp.flare.interface_abis.IFtsoInflationConfigurations, list)
        self.assertIsInstance(fpp.flare.interface_abis.IFtsoManager, list)
        self.assertIsInstance(fpp.flare.interface_abis.IFtsoManagerGenesis, list)
        self.assertIsInstance(fpp.flare.interface_abis.IFtsoRegistry, list)
        self.assertIsInstance(fpp.flare.interface_abis.IFtsoRegistryGenesis, list)
        self.assertIsInstance(fpp.flare.interface_abis.IFtsoRewardManager, list)
        self.assertIsInstance(fpp.flare.interface_abis.IFtsoRewardOffersManager, list)
        self.assertIsInstance(fpp.flare.interface_abis.IGenericRewardManager, list)
        self.assertIsInstance(fpp.flare.interface_abis.IGovernanceSettings, list)
        self.assertIsInstance(fpp.flare.interface_abis.IGovernanceVotePower, list)
        self.assertIsInstance(fpp.flare.interface_abis.IGovernor, list)
        self.assertIsInstance(fpp.flare.interface_abis.IIClaimSetupManager, list)
        self.assertIsInstance(fpp.flare.interface_abis.IICleanable, list)
        self.assertIsInstance(fpp.flare.interface_abis.IICleanupBlockNumberManager, list)
        self.assertIsInstance(fpp.flare.interface_abis.IIEntityManager, list)
        self.assertIsInstance(fpp.flare.interface_abis.IIFastUpdateIncentiveManager, list)
        self.assertIsInstance(fpp.flare.interface_abis.IIFastUpdater, list)
        self.assertIsInstance(fpp.flare.interface_abis.IIFlareSystemsCalculator, list)
        self.assertIsInstance(fpp.flare.interface_abis.IIFlareSystemsManager, list)
        self.assertIsInstance(fpp.flare.interface_abis.IIFtso, list)
        self.assertIsInstance(fpp.flare.interface_abis.IIFtsoFeedPublisher, list)
        self.assertIsInstance(fpp.flare.interface_abis.IIGovernanceVotePower, list)
        self.assertIsInstance(fpp.flare.interface_abis.IIGovernorProposer, list)
        self.assertIsInstance(fpp.flare.interface_abis.IINodePossessionVerifier, list)
        self.assertIsInstance(fpp.flare.interface_abis.IIPollingFoundation, list)
        self.assertIsInstance(fpp.flare.interface_abis.IIPublicKeyVerifier, list)
        self.assertIsInstance(fpp.flare.interface_abis.IIRNat, list)
        self.assertIsInstance(fpp.flare.interface_abis.IIRNatAccount, list)
        self.assertIsInstance(fpp.flare.interface_abis.IIRelay, list)
        self.assertIsInstance(fpp.flare.interface_abis.IIRewardEpochSwitchoverTrigger, list)
        self.assertIsInstance(fpp.flare.interface_abis.IIRewardManager, list)
        self.assertIsInstance(fpp.flare.interface_abis.IISubmission, list)
        self.assertIsInstance(fpp.flare.interface_abis.IIVPContract, list)
        self.assertIsInstance(fpp.flare.interface_abis.IIVPToken, list)
        self.assertIsInstance(fpp.flare.interface_abis.IIVoterRegistrationTrigger, list)
        self.assertIsInstance(fpp.flare.interface_abis.IIVoterRegistry, list)
        self.assertIsInstance(fpp.flare.interface_abis.IIncreaseManager, list)
        self.assertIsInstance(fpp.flare.interface_abis.IPChainStakeMirror, list)
        self.assertIsInstance(fpp.flare.interface_abis.IPChainStakeMirrorMultiSigVoting, list)
        self.assertIsInstance(fpp.flare.interface_abis.IPChainStakeMirrorVerifier, list)
        self.assertIsInstance(fpp.flare.interface_abis.IPChainVotePower, list)
        self.assertIsInstance(fpp.flare.interface_abis.IPollingFtso, list)
        self.assertIsInstance(fpp.flare.interface_abis.IPriceSubmitter, list)
        self.assertIsInstance(fpp.flare.interface_abis.IRNat, list)
        self.assertIsInstance(fpp.flare.interface_abis.IRNatAccount, list)
        self.assertIsInstance(fpp.flare.interface_abis.IRandomProvider, list)
        self.assertIsInstance(fpp.flare.interface_abis.IRelay, list)
        self.assertIsInstance(fpp.flare.interface_abis.IRewardManager, list)
        self.assertIsInstance(fpp.flare.interface_abis.ISubmission, list)
        self.assertIsInstance(fpp.flare.interface_abis.IVPContractEvents, list)
        self.assertIsInstance(fpp.flare.interface_abis.IVPToken, list)
        self.assertIsInstance(fpp.flare.interface_abis.IValidatorRegistry, list)
        self.assertIsInstance(fpp.flare.interface_abis.IValidatorRewardOffersManager, list)
        self.assertIsInstance(fpp.flare.interface_abis.IVoterRegistry, list)
        self.assertIsInstance(fpp.flare.interface_abis.IVoterWhitelister, list)
        self.assertIsInstance(fpp.flare.interface_abis.IWNat, list)
        self.assertIsInstance(fpp.flare.interface_abis.IWNatDelegationFee, list)

    def test_interface_name_to_abi(self):
        self.assertIsInstance(fpp.flare.interface_to_abi("Bn256"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("FlareContractsRegistryLibrary"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IAddressBinder"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("ICChainStake"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("ICChainVotePower"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IClaimSetupManager"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IDelegationAccount"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IDistributionToDelegators"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IEntityManager"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IFastUpdateIncentiveManager"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IFastUpdater"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IFastUpdatesConfiguration"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IFlareAssetRegistry"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IFlareContractRegistry"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IFlareDaemonize"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IFlareSystemsCalculator"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IFlareSystemsManager"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IFtso"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IFtsoFeedDecimals"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IFtsoFeedIdConverter"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IFtsoFeedPublisher"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IFtsoGenesis"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IFtsoInflationConfigurations"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IFtsoManager"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IFtsoManagerGenesis"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IFtsoRegistry"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IFtsoRegistryGenesis"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IFtsoRewardManager"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IFtsoRewardOffersManager"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IGenericRewardManager"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IGovernanceSettings"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IGovernanceVotePower"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IGovernor"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IIClaimSetupManager"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IICleanable"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IICleanupBlockNumberManager"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IIEntityManager"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IIFastUpdateIncentiveManager"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IIFastUpdater"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IIFlareSystemsCalculator"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IIFlareSystemsManager"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IIFtso"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IIFtsoFeedPublisher"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IIGovernanceVotePower"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IIGovernorProposer"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IINodePossessionVerifier"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IIPollingFoundation"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IIPublicKeyVerifier"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IIRNat"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IIRNatAccount"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IIRelay"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IIRewardEpochSwitchoverTrigger"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IIRewardManager"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IISubmission"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IIVPContract"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IIVPToken"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IIVoterRegistrationTrigger"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IIVoterRegistry"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IIncreaseManager"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IPChainStakeMirror"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IPChainStakeMirrorMultiSigVoting"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IPChainStakeMirrorVerifier"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IPChainVotePower"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IPollingFtso"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IPriceSubmitter"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IRNat"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IRNatAccount"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IRandomProvider"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IRelay"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IRewardManager"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("ISubmission"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IVPContractEvents"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IVPToken"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IValidatorRegistry"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IValidatorRewardOffersManager"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IVoterRegistry"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IVoterWhitelister"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IWNat"), list)
        self.assertIsInstance(fpp.flare.interface_to_abi("IWNatDelegationFee"), list)

    def test_abis_for_contracts(self):
        self.assertIsInstance(fpp.flare.products.AddressBinder.abi, list)
        self.assertIsInstance(fpp.flare.products.ClaimSetupManager.abi, list)
        self.assertIsInstance(fpp.flare.products.DistributionToDelegators.abi, list)
        self.assertIsInstance(fpp.flare.products.FlareAssetRegistry.abi, list)
        self.assertIsInstance(fpp.flare.products.FlareContractRegistry.abi, list)
        self.assertIsInstance(fpp.flare.products.FtsoManager.abi, list)
        self.assertIsInstance(fpp.flare.products.FtsoRegistry.abi, list)
        self.assertIsInstance(fpp.flare.products.FtsoRewardManager.abi, list)
        self.assertIsInstance(fpp.flare.products.ValidatorRewardManager.abi, list)
        self.assertIsInstance(fpp.flare.products.GovernanceSettings.abi, list)
        self.assertIsInstance(fpp.flare.products.GovernanceVotePower.abi, list)
        self.assertIsInstance(fpp.flare.products.PChainStakeMirror.abi, list)
        self.assertIsInstance(fpp.flare.products.PChainStakeMirrorMultiSigVoting.abi, list)
        self.assertIsInstance(fpp.flare.products.PChainStakeMirrorVerifier.abi, list)
        self.assertIsInstance(fpp.flare.products.PollingFtso.abi, list)
        self.assertIsInstance(fpp.flare.products.PriceSubmitter.abi, list)
        self.assertIsInstance(fpp.flare.products.RNat.abi, list)
        self.assertIsInstance(fpp.flare.products.ValidatorRegistry.abi, list)
        self.assertIsInstance(fpp.flare.products.VoterWhitelister.abi, list)
        self.assertIsInstance(fpp.flare.products.WNat.abi, list)

    def test_name_to_abi(self):
        self.assertIsInstance(fpp.flare.name_to_abi("AddressBinder"), list)
        self.assertIsInstance(fpp.flare.name_to_abi("ClaimSetupManager"), list)
        self.assertIsInstance(fpp.flare.name_to_abi("DistributionToDelegators"), list)
        self.assertIsInstance(fpp.flare.name_to_abi("FlareAssetRegistry"), list)
        self.assertIsInstance(fpp.flare.name_to_abi("FlareContractRegistry"), list)
        self.assertIsInstance(fpp.flare.name_to_abi("FtsoManager"), list)
        self.assertIsInstance(fpp.flare.name_to_abi("FtsoRegistry"), list)
        self.assertIsInstance(fpp.flare.name_to_abi("FtsoRewardManager"), list)
        self.assertIsInstance(fpp.flare.name_to_abi("ValidatorRewardManager"), list)
        self.assertIsInstance(fpp.flare.name_to_abi("GovernanceSettings"), list)
        self.assertIsInstance(fpp.flare.name_to_abi("GovernanceVotePower"), list)
        self.assertIsInstance(fpp.flare.name_to_abi("PChainStakeMirror"), list)
        self.assertIsInstance(fpp.flare.name_to_abi("PChainStakeMirrorMultiSigVoting"), list)
        self.assertIsInstance(fpp.flare.name_to_abi("PChainStakeMirrorVerifier"), list)
        self.assertIsInstance(fpp.flare.name_to_abi("PollingFtso"), list)
        self.assertIsInstance(fpp.flare.name_to_abi("PriceSubmitter"), list)
        self.assertIsInstance(fpp.flare.name_to_abi("RNat"), list)
        self.assertIsInstance(fpp.flare.name_to_abi("ValidatorRegistry"), list)
        self.assertIsInstance(fpp.flare.name_to_abi("VoterWhitelister"), list)
        self.assertIsInstance(fpp.flare.name_to_abi("WNat"), list)